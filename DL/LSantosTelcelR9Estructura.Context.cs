//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LSantosTelcelR9EstructuraEntities : DbContext
    {
        public LSantosTelcelR9EstructuraEntities()
            : base("name=LSantosTelcelR9EstructuraEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Departamento> Departamentoes { get; set; }
        public virtual DbSet<Empleado> Empleadoes { get; set; }
        public virtual DbSet<Puesto> Puestoes { get; set; }
        public virtual DbSet<Vista_DepartamentoEmpleadoPuesto> Vista_DepartamentoEmpleadoPuesto { get; set; }
    
        public virtual ObjectResult<DepartamentoGetAll_Result> DepartamentoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepartamentoGetAll_Result>("DepartamentoGetAll");
        }
    
        public virtual ObjectResult<EmpeladoGetAll_Result> EmpeladoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpeladoGetAll_Result>("EmpeladoGetAll");
        }
    
        public virtual int EmpleadoAdd(string nombre, string apellidoPaterno, string apellidoMaterno, Nullable<int> puestoId, Nullable<int> departamentoId)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var puestoIdParameter = puestoId.HasValue ?
                new ObjectParameter("PuestoId", puestoId) :
                new ObjectParameter("PuestoId", typeof(int));
    
            var departamentoIdParameter = departamentoId.HasValue ?
                new ObjectParameter("DepartamentoId", departamentoId) :
                new ObjectParameter("DepartamentoId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoAdd", nombreParameter, apellidoPaternoParameter, apellidoMaternoParameter, puestoIdParameter, departamentoIdParameter);
        }
    
        public virtual int EmpleadoDelete(Nullable<int> empleadoID)
        {
            var empleadoIDParameter = empleadoID.HasValue ?
                new ObjectParameter("EmpleadoID", empleadoID) :
                new ObjectParameter("EmpleadoID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EmpleadoDelete", empleadoIDParameter);
        }
    
        public virtual ObjectResult<EmpleadoGetByNombre_Result> EmpleadoGetByNombre(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmpleadoGetByNombre_Result>("EmpleadoGetByNombre", nombreParameter);
        }
    
        public virtual ObjectResult<PuestoGetAll_Result> PuestoGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PuestoGetAll_Result>("PuestoGetAll");
        }
    }
}
